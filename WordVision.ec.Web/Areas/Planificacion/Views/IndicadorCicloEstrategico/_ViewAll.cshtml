@using WordVision.ec.Web.Areas.Planificacion.Models
@model IndicadorCicloEstrategicoViewModelMaster


<table id="indicadorTable" class="table table-striped" width="100%" cellspacing="0">
    <thead>
        <tr>
           @* <th rowspan=2>Id</th><th rowspan=2>Idobjetivo</th>*@
            <th rowspan=2 style="vertical-align: middle;text-align: center;">Indicador</th>
            @foreach(var a in Model.AnioFiscalList)
            {
                <th colspan="3" style="vertical-align: middle;text-align: center;">Año Fiscal @a.Text</th>
               
            }
             <th rowspan=2 style="vertical-align: middle;text-align: center;">Meta Acumulada</th>
            <th rowspan=2 class="acciones-th" style="vertical-align: middle;text-align: center;">Acciones</th>
        </tr>
        <tr>
             @foreach(var a in Model.AnioFiscalList)
            {
                  <th>Meta</th>
                <th>Logro</th>
                 <th>Línea Base</th>
            }
          
        </tr>
    </thead>
    <tbody>

            @foreach (var indicador in Model.IndicadorCicloEstrategicoViewModel.ToList())
            {
                <tr id="Indi_@indicador.Id">

                    @*<td>

                        @indicador.Id
                    </td> <td>

                        @indicador.IdEstrategia
                    </td>*@
                    <td style="font-weight:bold">

                        @indicador.IndicadorCiclo
                    </td>

                
                    @*<td>
                        @{

                            var selectedCity = (IEnumerable<SelectListItem>)Model.AnioFiscalList;
                            string txt = selectedCity.Where(x => x.Value == indicador.AnioFiscal.ToString()).FirstOrDefault()?.Text ?? string.Empty;

                        }
                        @txt
                    </td>*@
                    <td>

                        @indicador.Meta
                    </td>
                    <td>

                        @indicador.Logro
                    </td>
                    <td>

                        @indicador.LineBase
                    </td>
              
                   @* <td>
                        @{

                           
                            string txt2 = selectedCity.Where(x => x.Value == indicador.AnioFiscal2.ToString()).FirstOrDefault()?.Text ?? string.Empty;

                        }
                        @txt2
                    </td>*@
                    <td>

                        @indicador.Meta2
                    </td>
                    <td>

                        @indicador.Logro2
                    </td>
                    <td>

                        @indicador.LineBase2
                    </td>
               
                   @* <td>
                        @{

                             string txt3 = selectedCity.Where(x => x.Value == indicador.AnioFiscal3.ToString()).FirstOrDefault()?.Text ?? string.Empty;

                        }
                        @txt3
                    </td>*@
                    <td>

                        @indicador.Meta3
                    </td>
                    <td>

                        @indicador.Logro3
                    </td>
                    <td>

                        @indicador.LineBase3
                    </td>
                @if (Model.AnioFiscalList.Count() == 4)
                {
                    @*<td>
                        @{

                            string txt4 = selectedCity.Where(x => x.Value == indicador.AnioFiscal4.ToString()).FirstOrDefault()?.Text ?? string.Empty;

                        }
                        @txt4
                    </td>*@
                    <td>

                        @indicador.Meta4
                    </td>
                    <td>

                        @indicador.Logro4
                    </td>
                    <td>

                        @indicador.LineBase4
                    </td>
                }
                <td style="font-weight:bold"> 
                    @*@{
                        decimal total = Convert.ToDecimal(indicador.Meta.Length==0?0:indicador.Meta) + Convert.ToDecimal(indicador.Meta2) + Convert.ToDecimal(indicador.Meta3) + Convert.ToDecimal(indicador.Meta4);
                    }
                    @total*@
                     @indicador.MetaAcumulada
                    </td>
                <td class="acciones-td">
                          <button type="button" class="btn btn-warning  btn-xp" title="Editar" id="btnViewModel" onclick="jQueryModalGet('/Planificacion/IndicadorCicloEstrategico/OnGetCreateOrEdit?id=@indicador.Id&idEstrategia=@indicador.IdEstrategia','Gestión')">
                <i class="fas fa-pen"></i>
            </button>
                        <button type="button" onclick="EliminaFilaIndicador(@indicador.Id)" class="btn btn-danger btn-xp"><i class="fas fa-trash-alt"></i> </button>

                    </td>

                </tr>
                
            }
           
    </tbody>
</table>

<script>

    $(document).ready(function () {


        var table = $("#indicadorTable").DataTable({
            aoColumnDefs: [
                { "aTargets": [0], "bSortable": true },
                { "aTargets": [2], "asSorting": ["asc"], "bSortable": true },
            ],
            "language": {
                "url": "/lib/datatables/language/Spanish.json"
            },

            responsive: true,
            columnDefs: [
                { responsivePriority: 1, targets: 0 },
                { responsivePriority: 2, targets: -1 }
            ],
            "info": false
            //columnDefs: [
            //    { responsivePriority: 1, targets: 0 },
            //    { responsivePriority: 10001, targets: 4 },
            //    { responsivePriority: 2, targets: -2 }
            //]
        });


        //var column = table.column(0);
        //// Toggle the visibility
        //column.visible(false);
        //  var column1 = table.column(1);
        //// Toggle the visibility
        //column1.visible(false);


        $('#gestionTable tbody').on('dblclick', 'tr', function () {
            var data = table.row(this).data();


            jQueryModalGet('/Planificacion/IndicadorCicloEstrategico/OnGetCreateOrEdit?id=' + data[0] + '&idEstrategia=' + data[1], 'Gestión');

        });

        $(".dynmic-hidden-col").hide();
    });

    function EliminaFilaIndicador(id) {

        $("#Indi_" + id).remove();

        var GestionViewModel = {
            id: id
        };

         $.ajax({
            type: "post",
            url:'@Url.Action("OnPostDelete", "IndicadorCicloEstrategico", new { area = "Planificacion" })',
             data: GestionViewModel,
            datatype: "json",
            cache: false,
            success: function (data) {
            /*  alert('Validooo');*/

            },
            error: function(xhr) {
               // alert('No Valid Data');
            }
        });
    }
</script>
