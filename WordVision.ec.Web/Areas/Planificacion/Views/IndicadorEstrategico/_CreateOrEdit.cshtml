@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using WordVision.ec.Web.Areas.Planificacion.Models
@model IndicadorEstrategicoViewModel

<div id="header" class="row titulopopup">
    <div class="col-8">
        <h6 class="h5 mb-2 text-gray-800-b">Objetivo: </h6>@Model.DescObjetivo
    </div>

    <div class="col-4" style="text-align: right;">
        <h6 class="h5 mb-2 text-gray-800-b">Categoria: </h6>@Model.DescCategoria
    </div>
</div>

<div id="header" class="row titulopopup">
    <div class="col-12" style="text-align: left;">
        <h6 class="h5 mb-2 text-gray-800-b">Factor: </h6>@Model.DescFactor
    </div>
</div>

    <hr />
    <form id="create-form" method="post" asp-controller="IndicadorEstrategico" asp-action="OnPostCreateOrEdit" asp-route-id="@Model.Id" onsubmit="return jQueryModalPost(this);" enctype="multipart/form-data">
        @Html.HiddenFor(x => x.IdFactorCritico)
        @{ decimal suma = 0;}

        <div class="row">
            <div class="col-md-12">
                <div class="form-group row">
                    <div class="col-md-12">
                        <label class="col-md-12 col-form-label texto-pregunta">Indicador de Resultado</label>

                        <textarea asp-for="IndicadorResultado" name="IndicadorResultado" class="form-control"></textarea>
                        <span asp-validation-for="IndicadorResultado" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-12">
                        <label class="col-md-12 col-form-label texto-pregunta">Medio Verificación</label>

                        <textarea asp-for="MedioVerificacion" name="MedioVerificacion" class="form-control"></textarea>
                        <span asp-validation-for="MedioVerificacion" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-5">
                        <label class="col-md-12 col-form-label texto-pregunta">Responsable</label>

                        @Html.DropDownListFor(x => x.Responsable, (IEnumerable<SelectListItem>)Model.responsableList, new { @class = "form-control" })

                        <span asp-validation-for="Responsable" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group row">
                     <div class="col-md-3"  style="text-align: right;">
                        <label class="col-md-12 col-form-label texto-pregunta text-left">Tipo Indicador</label>
                         @Html.DropDownListFor(x => x.Tipo, (IEnumerable<SelectListItem>)Model.TipoIndicadorList, new { @class = "form-control" })
                        <span asp-validation-for="Tipo" class="text-danger"></span>
                    </div>
                    <div class="col-md-3"  style="text-align: right;">
                        <label class="col-md-12 col-form-label texto-pregunta text-left">Codigo Indicador</label>
                        @* @Html.DropDownListFor(x => x.CodigoIndicador, (IEnumerable<SelectListItem>)Model.CodigoIndicadorList, new { @class = "form-control" })*@
                            @Html.DropDownListFor(x => x.Codigo, new List<SelectListItem>(), new { @class = "form-control" })

                        <span asp-validation-for="Codigo" class="text-danger"></span>
                    </div>
              
                    <div class="col-md-3">
                        <label class="col-md-12 col-form-label texto-pregunta text-left">Unidad Medida</label>
                        @Html.DropDownListFor(x => x.UnidadMedida, Model.UnidadList, new { @class = "form-control" })

                        <span asp-validation-for="UnidadMedida" class="text-danger"></span>
                    </div>
                     <div class="col-md-3"  style="text-align: right;">
                    <label class="col-md-12 col-form-label texto-pregunta text-left">Actores/Participantes</label>
                     @Html.DropDownListFor(x => x.Actor, (IEnumerable<SelectListItem>)Model.ActorParticipanteList, new { @class = "form-control" })
               
                 
                    <span asp-validation-for="Actor" class="text-danger"></span>
       
                </div>
                    <div class="col-md-2">
                        <label class="col-md-12 col-form-label texto-pregunta text-left">Línea Base</label>

                        <input asp-for="LineaBase" type="text" name="LineaBase" class="form-control" />
                        <span asp-validation-for="LineaBase" class="text-danger"></span>
                    </div>
                    <div class="col-md-2">
                        <label class="col-md-12 col-form-label texto-pregunta text-left">Meta acumulada ciclo</label>
                        <input asp-for="Meta" type="text" name="Meta" class="form-control" />
                        <span asp-validation-for="Meta" class="text-danger"></span>
                    </div>
                </div>
                <div class=" row" >
                         <div class="col-md-12">
                              <input type="text" value="" height="20" id="descResultado" name="descResultado" style="border:0px" class="col-md-12 col-form-label texto-pregunta" readonly  />
                         </div>
                    </div>
                <div class="form-group row">
                    <div class="col-md-12">
                        <hr />
                    </div>
                    <div class="col-md-12">
                        <label class="col-md-12 col-form-label">Metas Anuales de Indicador</label>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-2">
                        <label class="col-md-12 col-form-label texto-pregunta">Gestión</label>
                        @Html.DropDownListFor(x => x.gestionList, (IEnumerable<SelectListItem>)ViewBag.EstadoList, new { @class = "form-control" })
                        <span asp-validation-for="gestionList" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label class="col-md-12 col-form-label texto-pregunta text-left">Meta Anual</label>
                        <input asp-for="MetaAF" type="text" name="MetaAF" class="form-control" />
                        <span asp-validation-for="MetaAF" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label class="col-md-12 col-form-label texto-pregunta text-left">Entregable</label>
                        <input asp-for="EntregableAF" type="text" name="EntregableAF" class="form-control" />
                        <span asp-validation-for="EntregableAF" class="text-danger"></span>
                    </div>
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorEstrategico.Create)).Result.Succeeded)
                    {
                        <div class="col-md-2" style="padding-top: 25px;">
                            <button type="button" class="btn bg-success" onclick="AgregaConcepto(); return false;"> <i class="fa fa-plus-square"></i> Agregar</button>
                        </div>
                    }
                </div>

            </div>
        </div>

        <br />
        <div id="divMetas">
            <table id="metasTable" class="table table-striped rwd-table" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        @*<th>Id</th>*@
                        <th>Gestión</th>
                        <th>Metas Anuales</th>
                        <th>Entregable</th>
                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorEstrategico.Delete)).Result.Succeeded)
                        {
                            <th class="text-right">Acciones</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (Model.IndicadorAFs != null)
                    {
                        suma = 0;

                        @foreach (var metaanual in Model.IndicadorAFs)
                        {
                            suma = suma + Convert.ToDecimal(@metaanual.Meta);
                            <tr id="@metaanual.Id" class="rowdata">

                                <td class="af">
                                    @{
                                        var selectedCity = Model.gestionList;
                                        string txt = selectedCity.Where(x => x.Value == metaanual.Anio).FirstOrDefault().Text;
                                    }
                                    @txt

                                </td>
                                <td class="meta">
                                    @metaanual.Meta.ToString().Replace(",", ".")
                                </td>
                                <td>
                                    @metaanual.Entregable
                                </td>

                                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorEstrategico.Delete)).Result.Succeeded)
                                {

                                    <td class="text-right">
                                        <button type="button" class="btn btn-warning btn-xp" id="btnViewModel" onclick="ActualizaFila(@metaanual.Id,@metaanual.Anio,@metaanual.Meta.ToString().Replace(",", "."),'@metaanual.Entregable')">
                                            <i class="fas fa-pencil-alt"></i>
                                        </button>
                                        <button type="button" onclick="EliminaFila(@metaanual.Id)" class="btn btn-danger btn-xp">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>

                                    </td>
                                }

                            </tr>
                        }


                    }

                    <input value="@suma" type="hidden" id="suma" name="suma" />
                    <input  type="hidden" id="idact" name="idact" />
                </tbody>
            </table>

            <br />
            <div class="form-group justify-content-between" style="margin-bottom: 0px !important">
                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorEstrategico.Create)).Result.Succeeded)
                {<input type="hidden" value="false" name="band" id="band" />
                    <button type="submit" class="btn btn-success">Guardar</button>
                }
                else
                { <input type="hidden" value="true" name="band" id="band" />}
                <button type="submit" class="btn btn-default close-button" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </form>



    <script type="text/javascript" language=javascript>
    $.validator.unobtrusive.parse(document);

   // document.getElementById("Meta").value = document.getElementById("suma").value == null ? 0 : document.getElementById("suma").value;
    $(function () {
        sumar();
        $('#create-form *').prop('disabled', (document.getElementById("band").value == "true"));
        $(".datepicker").datepicker({
            format: "dd-mm-yyyy",
            autoclose: true,
            todayBtn: true });
        //$("#VigDesde").datepicker({ dateFormat: 'dd-mm-yy' });
        //$("#VigHasta").datepicker({ dateFormat: 'dd-mm-yy' });

        //
        //table
        //    .column(1)
        //    .data()
        //    .each(function (value, index) {
        //        alert('Data in index: ' + index + ' is: ' + value);

        //       // console.log('Data in index: ' + index + ' is: ' + value);
        //    });

        //console.log(rows);


    });

            $("#gestionList").select2({
        placeholder: "Select a Category",
        theme: "bootstrap4",
        escapeMarkup: function (m) {
            return m;
        }
    });

     $("#Tipo").change(function () {
                $.get("/Planificacion/IndicadorProductoObjetivo/GetTiposIndicador", { idTipoIndicador: $("#Tipo").val() }, function (data) {
                    // VACIAMOS EL DropDownList
                    $("#Codigo").empty();
                    // AÑADIMOS UN NUEVO label CON EL NOMBRE DEL ELEMENTO SELECCIONADO
                   // $("#IdResultado").append("<option value> -- Seleccionar Comportamiento de " + $("#IdPadreCompetencia option:selected").text() + " --</option>")
                    // CONSTRUIMOS EL DropDownList A PARTIR DEL RESULTADO Json (data)
                    $.each(data, function (index, row) {
                        $("#Codigo").append("<option value='" + row.id + "'>" + row.codigoIndicador + "</option>")
                    });
                });
            });
            $("#Codigo").change(function () {
                $.get("/Planificacion/IndicadorProductoObjetivo/GetDescTiposIndicador", { idCodigoIndicador: $("#Codigo").val() }, function (data) {
                   $("#descResultado").val(data.descripcion);
                });
            });

    function sumar() {

        const tableRows = document.querySelectorAll('#metasTable tr.rowdata');

        var sum = 0;
        // Recorremos las filas que tengan el class="row"
        // así obviamos la cabecera
        for (let i = 0; i < tableRows.length; i++) {
            const row = tableRows[i];
            const status = row.querySelector('.meta');

            sum = sum + parseFloat(status.innerText);
            // Para modificar un estado:
            // status.innerText = 'offline';
        }

        document.getElementById("Meta").value = String(sum).replace('.', ',');
    }


    function duplicados(af_in) {

        const tableRows = document.querySelectorAll('#metasTable tr.rowdata');


        // Recorremos las filas que tengan el class="row"
        // así obviamos la cabecera
        for (let i = 0; i < tableRows.length; i++) {
            const row = tableRows[i];
            const status = row.querySelector('.af');

            if (af_in == status.innerText) {
                alert("Ya existe la gestion " + af_in);
                return true;
            }
            // Para modificar un estado:
            // status.innerText = 'offline';
        }
        return false;

    }


            var num = 0;
           // let sum = document.getElementById("suma").value;
        function AgregaConcepto() {
            let idact = document.getElementById("idact").value;

            if (idact.length != 0) {
                EliminaFila(idact);
            }

            let Anio = document.getElementById("gestionList").value;
            let Entregable = document.getElementById("EntregableAF").value;
            let Meta = document.getElementById("MetaAF").value.replace(',', '.');
            var selection = document.getElementById("gestionList");
            let AnioDesc = selection.options[selection.selectedIndex].innerHTML;

            if (duplicados(AnioDesc)) { return;}
           // let IdEstrategia = document.getElementById("Id").value;
           // sum = parseFloat(sum) + parseFloat(Meta);
            if (Anio.length == 0) {
                alert("Ingrese la Gestion.");
                return;
            }
            if (Meta.length == 0) {
                alert("Ingrese la Meta.");
                return;
            }
            if (Entregable.length == 0) {
                alert("Ingrese el Entregable.");
                return;
            }


            //agregamos tabla
            let Tabla = document.getElementById("metasTable");
            let TR = document.createElement("tr");
            TR.setAttribute('id', num);
            TR.className = "rowdata";
           // let TDId = document.createElement("td");
            let TDAnio = document.createElement("td");
            let TDMeta = document.createElement("td");
            let TDEntregable = document.createElement("td");
            let TDEliminar = document.createElement("td");
            TDEliminar.className = "text-right";
            TDMeta.className = "meta";
            TDAnio.className = "af";
            //let TDTotal = document.createElement("td");
           // TR.appendChild(TDId);
            TR.appendChild(TDAnio);
            TR.appendChild(TDMeta);
            TR.appendChild(TDEntregable);
            TR.appendChild(TDEliminar);
            //TR.appendChild(TDTotal);
           // TDId.innerHTML = num;
            TDAnio.innerHTML = AnioDesc;
            TDMeta.innerHTML = Meta;
            TDEntregable.innerHTML = Entregable;
            TDEliminar.innerHTML = " <button type='button' class='btn btn-warning btn-xp' id='btnViewModel' onclick='ActualizaFila(" + num + "," + Anio+","+Meta.ToString().Replace(",", ".")+","+Entregable+")'> <i class='fas fa-pencil-alt'></i>  </button> <button type='button' onclick='EliminaFila("+num+")' class='btn btn-danger btn-xp'><i class='fas fa-trash-alt'></i></button>";
            //TDTotal.innerHTML = parseFloat(Cantidad) * parseFloat(Precio);
            Tabla.appendChild(TR);

            //agregamos hiddens
            let DivConceptos = document.getElementById("divMetas");
            let HiddenIndex = document.createElement("input");
            let HiddenAnio = document.createElement("input");
            let HiddenMeta = document.createElement("input");
            let HiddenEntregable = document.createElement("input");
            HiddenIndex.name = "indicador.Index";
            HiddenIndex.value = num;
            HiddenIndex.type = "hidden";
            HiddenAnio.name = "indicador[" + num + "].Anio";
            HiddenAnio.value = Anio;
            HiddenAnio.type = "hidden";
            HiddenMeta.name = "indicador[" + num + "].Meta";
            HiddenMeta.value = Meta.replace('.', ',');;
            HiddenMeta.type = "hidden";
            HiddenEntregable.name = "indicador[" + num + "].Entregable";
            HiddenEntregable.value = Entregable;
            HiddenEntregable.type = "hidden";
            DivConceptos.appendChild(HiddenIndex);
            DivConceptos.appendChild(HiddenAnio);
            DivConceptos.appendChild(HiddenMeta);
            DivConceptos.appendChild(HiddenEntregable);

            document.getElementById("gestionList").value = "";
            document.getElementById("EntregableAF").value = "";
            document.getElementById("MetaAF").value = "";

            //document.getElementById("Meta").value = sum;

            num++;

            sumar();
            // table
            //.column(1)
            //.data()
            //.each(function (value, index) {
            //    alert('Data in index: ' + index + ' is: ' + value);

            //   // console.log('Data in index: ' + index + ' is: ' + value);
            //});

            //var GestionViewModel = {
            //    Anio: Nombre,
            //    Descripcion: Hablado,
            //    Estado: Escrito,
            //    IdEstrategia: IdEstrategia

            //};

        @*$.ajax({
            type: "post",
            url:'@Url.Action("OnPostCreateOrEdit", "Idioma", new { area = "Registro" })',
            data: GestionViewModel,
            datatype: "json",
            cache: false,
            success: function (data) {
            /* alert('Validooo');*/

            },
            error: function(xhr) {
            //    alert('No Valid Data');
            }
        });*@

        }

    function deleteRow(id) {
        $("#" + id).remove();
    }

    function EliminaFila(id) {

        $("#" + id).remove();

        var GestionViewModel = {
            id: id
        };

         $.ajax({
            type: "post",
            url:'@Url.Action("OnPostDelete", "IndicadorAF", new { area = "Planificacion" })',
             data: GestionViewModel,
            datatype: "json",
            cache: false,
            success: function (data) {
            /*  alert('Validooo');*/

            },
            error: function(xhr) {
               // alert('No Valid Data');
            }
         });

        sumar();
    }

        function ActualizaFila(id, gestion, meta, entregable) {
            $("#gestionList").val(gestion);
            $("#gestionList").select2().trigger('change');

            document.getElementById("idact").value = id;
            document.getElementById("EntregableAF").value = entregable;
            document.getElementById("MetaAF").value = meta;

        }
    </script>
