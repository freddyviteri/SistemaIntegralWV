@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using WordVision.ec.Infrastructure.Data.Identity.Models;
@using WordVision.ec.Web.Areas.Donacion.Models;
@model DonanteViewModel


<form id="create-form" name="createoredit" method="post" asp-controller="Donante" asp-route-vienede=@Model.Vienede asp-action="OnPostCreateOrEdit" asp-route-id="@Model.Id" enctype="multipart/form-data">

    @*<div class="row">
    <div class="col-md-4">
    <div class="form-group row">
    <div class="col-md-12">
    <label class="col-md-12 col-form-label texto-pregunta">Id HubSpot</label>
    <input asp-for="IDHubspot" type="text" name="IDHubspot" class="form-control" />
    <span asp-validation-for="IDHubspot" class="text-danger"></span>
    </div>
    </div>

    </div>



    </div>*@
    <div class="row">
        <div class="col-md-12">
            <div class="form-group row">
                <div class="col-md-3">  
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="FechaConversion"></label>
                    <input asp-for="FechaConversion" type="text" name="FechaConversion" class=" form-control" readonly />
                    <span asp-validation-for="FechaConversion" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Canal"></label>
                    @Html.DropDownListFor(x => x.Canal, (IEnumerable<SelectListItem>)Model.CanalList, new { @class = "form-control",required = "required" })
                    <span asp-validation-for="Canal" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Responsable"></label>
                    @Html.DropDownListFor(x => x.Responsable, (IEnumerable<SelectListItem>)Model.ResponsableList, new { @class = "form-control" ,required = "required"})
                    <span asp-validation-for="Responsable" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Tipo"></label>
                    @Html.DropDownListFor(x => x.Tipo, (IEnumerable<SelectListItem>)Model.TipoList, new { @class = "form-control",required = "required" })
                    <span asp-validation-for="Tipo" class="text-danger"></span>
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group row">


                <div class="col-md-4">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Categoria"></label>
                    @Html.DropDownListFor(x => x.Categoria, (IEnumerable<SelectListItem>)Model.CategoriaList, new { @class = "form-control",required = "required" })
                    <span asp-validation-for="Categoria" class="text-danger"></span>
                </div>
                <div class="col-md-4">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Campana"></label>
                    @Html.DropDownListFor(x => x.Campana, (IEnumerable<SelectListItem>)Model.CampanaList, new { @class = "form-control" ,required = "required"})
                    <span asp-validation-for="Campana" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="EstadoDonante"></label>
                    @Html.DropDownListFor(x => x.EstadoDonante, (IEnumerable<SelectListItem>)Model.EstadoDonanteList, new { @class = "form-control",required = "required" })
                    <span asp-validation-for="EstadoDonante" class="text-danger"></span>
                </div>

            </div>

        </div>
    </div>

    <hr />
    <div class="row">
        <div class="col-md-12">
            <div class="form-group row">
                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Nombre1"></label>
                    <input asp-for="Nombre1" type="text" name="Nombre1" class="form-control" required/>
                    <span asp-validation-for="Nombre1" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Nombre2"></label>
                    <input asp-for="Nombre2" type="text" name="Nombre2" class="form-control" required/>
                    <span asp-validation-for="Nombre2" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Apellido1"></label>
                    <input asp-for="Apellido1" type="text" name="Apellido1" class="form-control" required/>
                    <span asp-validation-for="Apellido1" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Apellido2"></label>
                    <input asp-for="Apellido2" type="text" name="Apellido2" class="form-control" required />
                    <span asp-validation-for="Apellido2" class="text-danger"></span>
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group row">
                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Genero"></label>
                    @Html.DropDownListFor(x => x.Genero, (IEnumerable<SelectListItem>)Model.GeneroList, new { @class = "form-control" ,required = "required"})
                    <span asp-validation-for="Genero" class="text-danger"></span>
                </div>

                <div class="col-md-2">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Cedula"></label>
                    @Html.DropDownListFor(x => x.Cedula, (IEnumerable<SelectListItem>)Model.TipoIdList, new { @class = "form-control",required = "required" })
                    <span asp-validation-for="Cedula" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="RUC"></label>
                    <input asp-for="RUC" type="text" name="RUC" class="form-control" required />
                    <span asp-validation-for="RUC" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="FechaNacimiento"></label>
                    <input asp-for="FechaNacimiento" type="text" name="FechaNacimiento" id="FechaNacimiento" class="datepicker3 form-control" readonly required />
                    <span asp-validation-for="FechaNacimiento" class="text-danger"></span>
                </div>
                <div class="col-md-1">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Edad"></label>
                    <input asp-for="Edad" type="text" name="Edad" id="Edad" class="form-control" readonly />
                    <span asp-validation-for="Edad" class="text-danger"></span>
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group row">


                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Region"></label>
                    @Html.DropDownListFor(x => x.Region, (IEnumerable<SelectListItem>)Model.RegionList, new { @class = "form-control",required = "required" })
                    <span asp-validation-for="Region" class="text-danger"></span>
                </div>

                <div class="col-md-4">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Provincia"></label>
                    @Html.DropDownListFor(x => x.Provincia, (IEnumerable<SelectListItem>)Model.ProvinciaList, new { @class = "form-control",required = "required" })
                    <span asp-validation-for="Provincia" class="text-danger"></span>
                </div>

                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Ciudad"></label>
                    @Html.DropDownListFor(x => x.Ciudad, (IEnumerable<SelectListItem>)Model.CiudadList, new { @class = "form-control",required = "required" })
                    <span asp-validation-for="Ciudad" class="text-danger"></span>
                </div>


            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group row">
                <div class="col-md-12">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Direccion"></label>
                    <textarea asp-for="Direccion" type="text" name="Direccion" class="form-control" rows="3" required></textarea>
                    <span asp-validation-for="Direccion" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group row">

                <div class="col-md-12">
                    <div class="form-group row">
                        <div class="col-md-1">
                            <label class="col-md-12 col-form-label texto-pregunta" asp-for="CodigoArea"></label>
                            @*@Html.DropDownListFor(x => x.CodigoArea, (IEnumerable<SelectListItem>)Model.CodigoAreaList, new { @class = "form-control" })*@
                            <input asp-for="CodigoArea" type="text" name="CodigoArea" class="form-control" readonly />
                            <span asp-validation-for="CodigoArea" class="text-danger"></span>
                        </div>
                        <div class="col-md-2">
                            <label class="col-md-12 col-form-label texto-pregunta" asp-for="TelefonoConvencional"></label>
                            <input asp-for="TelefonoConvencional" maxlength=7 type="text" name="TelefonoConvencional" class="form-control" />
                            <span asp-validation-for="TelefonoConvencional" class="text-danger"></span>
                        </div>
                        <div class="col-md-2">
                            <label class="col-md-12 col-form-label texto-pregunta" asp-for="TelefonoCelular"></label>
                            <input asp-for="TelefonoCelular" type="text" maxlength=10 name="TelefonoCelular" class="form-control" required/>
                            <span asp-validation-for="TelefonoCelular" class="text-danger"></span>
                        </div>

                        <div class="col-md-2">
                            <label class="col-md-12 col-form-label texto-pregunta">WhatsApp</label>
                            <input asp-for="WhatsApp" type="checkbox" name="WhatsApp" />
                            <span asp-validation-for="WhatsApp" class="text-danger"></span>

                        </div>
                        <div class="col-md-4">
                            <label class="col-md-12 col-form-label texto-pregunta" asp-for="Email"></label>
                            <input asp-for="Email" type="text" name="Email" class="form-control"  required/>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                    </div>
                </div>

            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group row">


                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="FrecuenciaDonacion"></label>
                    @Html.DropDownListFor(x => x.FrecuenciaDonacion, (IEnumerable<SelectListItem>)Model.FrecuenciaList, new { @class = "form-control" ,required = "required"})
                    <span asp-validation-for="FrecuenciaDonacion" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="PeriodoDonacion"></label>
                    @Html.DropDownListFor(x => x.PeriodoDonacion, (IEnumerable<SelectListItem>)Model.PeriodoDonacionList, new { @class = "form-control" ,required = "required"})
                    <span asp-validation-for="PeriodoDonacion" class="text-danger"></span>
                </div>

                <div class="col-md-2">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Cantidad"></label>
                    <input asp-for="Cantidad" type="text" name="Cantidad" class="form-control" min="0,0" required>
                    <span asp-validation-for="Cantidad" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="MesInicialDebito"></label>

                    <input type="text" asp-for="MesInicialDebito" name="MesInicialDebito" class="datepicker2 form-control" required/>
                    <span asp-validation-for="MesInicialDebito" class="text-danger"></span>
                </div>
                @* <div class="col-md-2">
                <label class="col-md-12 col-form-label texto-pregunta" asp-for="Quincena"></label>
                @Html.DropDownListFor(x => x.Quincena, (IEnumerable<SelectListItem>)Model.QuincenaList, new { @class = "form-control" })
                <span asp-validation-for="Quincena" class="text-danger"></span>
                </div>*@

            </div>

            <div class="form-group row">
            </div>
            <div class="form-group row">

                <div class="col-md-2">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Hubspot"></label>

                    <input type="text" asp-for="Hubspot" name="Hubspot" class="form-control" />
                    <span asp-validation-for="Hubspot" class="text-danger"></span>
                </div>
                <div class="col-md-2">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="Formulario"></label>

                    <input type="text" asp-for="Formulario" name="Formulario" class="form-control" />
                    <span asp-validation-for="Formulario" class="text-danger"></span>
                </div>
                <div class="col-md-2">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="NumeroGuia"></label>

                    <input type="text" asp-for="NumeroGuia" name="NumeroGuia" class="form-control" />
                    <span asp-validation-for="NumeroGuia" class="text-danger"></span>
                </div>

                <div class="col-md-2">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="FechaEntrega"></label>

                    <input type="text" asp-for="FechaEntrega" name="FechaEntrega" class="datepicker5 form-control" />
                    <span asp-validation-for="FechaEntrega" class="text-danger" readonly></span>
                </div>
                <div class="col-md-3">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="CalificacionDonante"></label>
                    @Html.DropDownListFor(x => x.CalificacionDonante, (IEnumerable<SelectListItem>)Model.CalificacionDonanteList, new { @class = "form-control" })
                    <span asp-validation-for="CalificacionDonante" class="text-danger"></span>
                </div>

            </div>


        </div>
    </div>

    <div class="row">
        <div class="col-md-10">
            <div class="form-group row">
                <div class="col-md-6">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="FormaPago"></label>

                    @Html.DropDownListFor(x => x.FormaPago, (IEnumerable<SelectListItem>)Model.FormaPagoList, new { @class = "form-control" ,required = "required"})

                    <span asp-validation-for="FormaPago" class="text-danger"></span>
                </div>

                @*<div class="col-md-4">
                <label class="col-md-12 col-form-label texto-pregunta" asp-for="EvidenciaConversion"></label>
                <div class="custom-file form-image">

                @if (Model.EvidenciaConversion != null && Model.EvidenciaConversion.Length > 0)
                {
                <a href='/soporte/donante/ShowPDF?id=@Model.Id&tipo=1' target="_blank"><i class="fas fa-newspaper"></i> Ver Adjunto</a>
                }
                else
                {
                <input accept=".pdf"
                asp-for="@Model.EvidenciaConversion"
                type="file" class="form-control form-control-sm file"
                id="customFile"  >



                if (Model.EvidenciaConversion != null && Model.EvidenciaConversion.Length > 0)
                {
                <label class="custom-file-label" for="customFile">Archivo almacenado</label>
                }
                else
                {
                <label class="custom-file-label" for="customFile">Buscar Archivo</label>

                }
                }

                </div></div>*@
                <div class="col-md-6">


                    @* @if (!string.IsNullOrEmpty(ViewBag.RutaLogo) && !string.IsNullOrEmpty(ViewBag.NombreLogo))
                    {
                    <a href="@ViewBag.RutaLogo" download="@ViewBag.NombreLogo" data-tippy-content="Descargar logo actual"><i class="fas fa-download"></i></a>
                    }*@

                    <label class="col-md-12 col-form-label texto-pregunta" for="input-file-logo">
                        Evidencia

                        @if (Model.EvidenciaConversion != null && Model.EvidenciaConversion.Length > 0)
                        {
                            <a href='/donacion/donante/ShowPDF?id=@Model.Id&tipo=1' download="evidencia"><i class="fas fa-download"></i></a>
                        }
                    </label>
                    <div class="col-lg-12 col-md-12 col-sm-12" style="padding-left:0px !important">
                        <input class="alto" id="input-file-logo" name="input-file-logo" style="height: 38px !important" type="file" class="form-control form-control-sm file" data-msg-placeholder="SELECCIONAR EVIDENCIA..." data-show-preview="false" accept=".png, .jpg, ,jpeg, .gif,.pdf, .xlsx" />

                    </div>

                </div>

            </div>

        </div>
    </div>
    @*inicio boton pagos*@
    <div id="botonpagos" class="row">

        <div class="col-md-12">

            <div class="card">
                <div class="card-header  bg-primary">Botón de Pago</div>
                <div class="card-body">

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group row">
                                <div class="col-md-4">
                                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="NumReferenciaBp"></label>
                                    <input asp-for="NumReferenciaBp" type="text" name="NumReferenciaBp" class="form-control" />
                                    <span asp-validation-for="NumReferenciaBp" class="text-danger"></span>
                                </div>

                                @*<div class="col-md-4">
                                <label class="col-md-12 col-form-label texto-pregunta">TipoCuenta</label>
                                @Html.DropDownListFor(x => x.TipoCuentaBp, (IEnumerable<SelectListItem>)Model.TipoCuentaList, new { @class = "form-control" })

                                <span asp-validation-for="TipoCuentaBp" class="text-danger"></span>
                                </div>

                                <div class="col-md-4">
                                <label class="col-md-12 col-form-label texto-pregunta">NumeroCuenta</label>
                                <input asp-for="NumeroCuentaBp" type="text" name="NumeroCuentaBp" class="form-control" />
                                <span asp-validation-for="NumeroCuentaBp" class="text-danger"></span>
                                </div>*@
                            </div>

                        </div>
                    </div>
                    @*<div class="row">
                    <div class="col-md-12">
                    <div class="form-group row">
                    <div class="col-md-4">
                    <label class="col-md-12 col-form-label texto-pregunta">TiposTarjetasCredito</label>
                    @Html.DropDownListFor(x => x.TiposTarjetasCreditoBp, (IEnumerable<SelectListItem>)Model.TipoTarjetaList, new { @class = "form-control" })
                    <span asp-validation-for="TiposTarjetasCreditoBp" class="text-danger"></span>
                    </div>

                    <div class="col-md-4">
                    <label class="col-md-12 col-form-label texto-pregunta">NumeroTarjeta</label>
                    <input asp-for="NumeroTarjetaBp" type="text" name="NumeroTarjetaBp" class="form-control" />
                    <span asp-validation-for="NumeroTarjetaBp" class="text-danger"></span>
                    </div>

                    <div class="col-md-4">
                    <label class="col-md-12 col-form-label texto-pregunta">FechaCaducidad</label>
                    <input asp-for="FechaCaducidadBp" type="text" name="FechaCaducidadBp" class="datepicker form-control" />
                    <span asp-validation-for="FechaCaducidadBp" class="text-danger"></span>
                    </div>
                    </div>

                    </div>
                    </div>
                    <div class="row">
                    <div class="col-md-12">
                    <div class="form-group row">
                    <div class="col-md-4">
                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="FechaVencimiento"></label>
                    <input asp-for="FechaVencimiento" type="text" name="FechaVencimiento" class="datepicker form-control" />
                    <span asp-validation-for="FechaVencimiento" class="text-danger"></span>
                    </div>

                    <div class="col-md-4">
                    <label class="col-md-4 col-form-label texto-pregunta">Banco</label>
                    @Html.DropDownListFor(x => x.BancoBp, (IEnumerable<SelectListItem>)Model.BancoList, new { @class = "form-control" })
                    <span asp-validation-for="BancoBp" class="text-danger"></span>
                    </div>
                    </div>

                    </div>
                    </div>*@
                </div>
                @*fin boton pagos*@
            </div>

        </div>
    </div>


    @*debito bancario*@
    <div id="debitobancario" class="row">

        <div class="col-md-12">

            <div class="card">
                <div class="card-header  bg-primary">Débito Bancario</div>
                <div class="card-body">

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group row">

                                <div class="col-md-4">
                                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="TipoCuenta"></label>
                                    @Html.DropDownListFor(x => x.TipoCuenta, (IEnumerable<SelectListItem>)Model.TipoCuentaList, new { @class = "form-control" })

                                    <span asp-validation-for="TipoCuenta" class="text-danger"></span>
                                </div>

                                <div class="col-md-4">
                                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="NumeroCuenta"></label>
                                    <input asp-for="NumeroCuenta" type="text" name="NumeroCuenta" maxlength="30" class="form-control" />
                                    <span asp-validation-for="NumeroCuenta" class="text-danger"></span>
                                </div>
                                <div class="col-md-4">
                                    <label class="col-md-4 col-form-label texto-pregunta" asp-for="Banco"></label>
                                    @Html.DropDownListFor(x => x.Banco, (IEnumerable<SelectListItem>)Model.BancoList, new { @class = "form-control" })
                                    <span asp-validation-for="Banco" class="text-danger"></span>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                @*debito bancario*@
            </div>

        </div>
    </div>


    @*inicio deposito/transferencia*@
    <div id="deposito" class="row">

        <div class="col-md-12">

            <div class="card">
                <div class="card-header  bg-primary">Depósito/Transferencia</div>
                <div class="card-body">

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group row">
                                <div class="col-md-4">
                                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="NumReferencia"></label>
                                    <input asp-for="NumReferencia" type="text" name="NumReferencia" class="form-control" />
                                    <span asp-validation-for="NumReferencia" class="text-danger"></span>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
                @*fin deposito/transferencia*@
            </div>

        </div>
    </div>


    @*inicio tarjeta de Creditos*@
    <div id="tarjeta" class="row">

        <div class="col-md-12">

            <div class="card">
                <div class="card-header  bg-primary">Tarjeta de Crédito</div>
                <div class="card-body">


                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group row">
                                <div class="col-md-4">
                                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="TiposTarjetasCredito"></label>
                                    @Html.DropDownListFor(x => x.TiposTarjetasCredito, (IEnumerable<SelectListItem>)Model.TipoTarjetaList, new { @class = "form-control" })
                                    <span asp-validation-for="TiposTarjetasCredito" class="text-danger"></span>
                                </div>

                                <div class="col-md-4">
                                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="NumeroTarjeta"></label>
                                    <input asp-for="NumeroTarjeta" type="text" maxlength="20" name="NumeroTarjeta" class="form-control" />
                                    <span asp-validation-for="NumeroTarjeta" class="text-danger"></span>
                                </div>

                                <div class="col-md-4">
                                    <label class="col-md-12 col-form-label texto-pregunta" asp-for="FechaCaducidad"></label>
                                    <input asp-for="FechaCaducidad" type="text" name="FechaCaducidad" class="datepicker4 form-control" />
                                    <span asp-validation-for="FechaCaducidad" class="text-danger"></span>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                @*fin boton pagos*@
            </div>

        </div>
    </div>

    @if (User.IsInRole("DonantesAdministrador") || @Model.ComentarioActualizacion != null)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="form-group row">
                    <div class="col-md-12">
                        <label class="col-md-12 col-form-label texto-pregunta" asp-for="ComentarioActualizacion"></label>
                        <textarea asp-for="ComentarioActualizacion" name="ComentarioActualizacion" class="form-control"></textarea>
                        <span asp-validation-for="ComentarioActualizacion" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (!User.IsInRole("DonantesAdministrador") && @Model.ComentarioActualizacion != null)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="form-group row">
                    <div class="col-md-12">
                        <label class="col-md-12 col-form-label texto-pregunta" asp-for="ComentarioResolucion"></label>
                        <textarea asp-for="ComentarioResolucion" name="ComentarioResolucion" class="form-control"></textarea>
                        <span asp-validation-for="ComentarioResolucion" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>
    }


    <br />
    <div class="form-group justify-content-between" style="margin-bottom: 0px !important">
        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Donante.Create)).Result.Succeeded)
        {
            <input type="hidden" value="false" name="band" id="band" />
            <button type="submit" class="btn btn-info" style="background-color:blue !important">Guardar</button>
        }
        else
        {
            @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Donante.Edit)).Result.Succeeded)
            {
                <button type="submit" id="btnGuardar" class="btn btn-info">Guardar</button>
                <input asp-for="EsAdmin" type="hidden" name="EsAdmin" value=1 class="form-control" />
            }
            <input type="hidden" value="true" name="band" id="band" />
        }
        <button type="submit" id="btnCancelar" class="btn btn-default close-button" data-dismiss="modal">Cancelar</button>
    </div>

</form>


<script type="text/javascript" language=javascript>
    $.validator.unobtrusive.parse(document);

    //jhosel macias 12.07.22 20 minutos con validaciones              
    $("#create-form").on("submit", function(e) {
        e.preventDefault();

        var validacion = $("#Nombre1").val();
        alert($("#Nombre1").val().indexOf("."));
      
        if  ($("#Nombre1").val().indexOf(".") >= 0 || $("#Nombre1").val() > 48 || $("#Nombre1").val() < 57  || $("#Nombre1").val().indexOf(",") >= 0 ) {
                  

                 Swal.fire("¡Advertencia!", "Campo Nombre no debe tener caracteres especiales", "warning");
                  $("#Nombre1").val("");
              return false;
                          
              
            
        }


          var formaPago  = $("#FormaPago").val();

        if (formaPago == 1) {
            var referencia  = $("#NumReferenciaBp").val();

            if (referencia == "") {
                Swal.fire("¡Advertencia!", "Campo Num. Referencia no puede estar vacio", "warning");
                return false;
            }
        }
        var formaPago  = $("#FormaPago").val();

        if (formaPago == 2) {
            var tipoCuenta = $("#TipoCuenta").val();
            var banco = $("#Banco").val();
            var cuenta = $("#NumeroCuenta").val();
            

            if (tipoCuenta == "") {
                Swal.fire("¡Advertencia!", "Campo Tipo de Cuenta no puede estar vacio", "warning");
                return false;
            }
            if (cuenta == "") {
                Swal.fire("¡Advertencia!", "Campo Número de Cuenta no puede estar vacio", "warning");
                return false;
            }
            if (banco == "") {
                Swal.fire("¡Advertencia!", "Campo Banco no puede estar vacio", "warning");
                return false;

            }
        }
        var formaPago=  $("#FormaPago").val();
      
        if (formaPago == 3) {
             var referenciadt=  $("#NumReferencia").val();
          
              if (referenciadt == "") {
                   Swal.fire("¡Advertencia!", "Campo  Num. Referencia no puede estar vacio", "warning");
                  return false;
              }
        }
         var formaPago  = $("#FormaPago").val();

        if (formaPago == 4) {
            var tipotarjetaCredito = $("#TiposTarjetasCredito").val();
            var numerotarjeta = $("#NumeroTarjeta").val();
            var fechacaducidad = $("#FechaCaducidad").val();

            if (tipotarjetaCredito == "") {
                Swal.fire("¡Advertencia!", "Campo Tipo de Tarjeta no puede estar vacio", "warning");
                return false;
            }
            if (numerotarjeta == "") {
                Swal.fire("¡Advertencia!", "Campo Numero de Tarjeta no puede estar vacio", "warning");
                return false;

            }
             if (fechacaducidad == "") {
                Swal.fire("¡Advertencia!", "Campo Fecha Caducidad no puede estar vacio", "warning");
                return false;

            }
        }


        if (@Model.Vienede == 0)  {

                return jQueryModalPost(this);
         } else {
          
            if ($("#create-form")[0].checkValidity()) {
                $("#create-form")[0].submit();
            }
            else { $("#create-form")[0].reportValidity(); }
                   
             
              return true;
        }

    });

    //Logo
    $('#input-file-logo').fileinput({
        language: "es",
        showUpload: false,
        maxFileCount: 1,
        inputGroupClass: "input-group-sm",
        allowedFileExtensions: ["jpg", "png", "jpeg", "gif", "pdf", "xlsx"],
    }).on('fileloaded', function() {
        //validarDimensiones();
    });

    $(function() {

        $('#FechaNacimiento').on('change', calcularEdadEdit);
        $('#create-form *').prop('disabled', (document.getElementById("band").value == "true"));
        $('#ComentarioActualizacion').removeAttr("disabled");
        $('#EsAdmin').removeAttr("disabled");
        $('#btnCancelar').removeAttr("disabled");
        $('#btnGuardar').removeAttr("disabled");
        $('#ComentarioResolucion').removeAttr("disabled");

        $(".datepicker").datepicker({
            format: "dd-mm-yyyy",
            autoclose: true,
            todayBtn: true
        });

        $("#MesInicialDebito .datepicker").datepicker({
            format: "dd-mm-yyyy",
            autoclose: true,
            todayBtn: true,
            startDate: "06/07/2022"
        });


        /*   $("#MesInicialDebito.datepicker").datepicker({
               format: "dd-mm-yyyy",
               autoclose: true,
               todayBtn: true,
           startDate: "06/07/2022"});*/
        //FECHA DE INGRESO DE DONACION
        $(".datepicker2").datepicker({
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayBtn: true,
            firstDay: 1,
            minDate: new Date(2005, 0, 1),
            yearRange: '2005:' + String((new Date()).getFullYear() + 1),
            format: "dd-mm-yyyy",
            startDate: new Date()

            //datesDisabled: [
            //    "05/07/2022", fechas especificas
            //    "04/07/2022",
            //],

        });
        //FECHA DE NACIMIENTO
        $(".datepicker3").datepicker({
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayBtn: true,
            firstDay: 1,
            //minDate : new Date(2005, 0, 1),
            yearRange: '2005:' + String((new Date()).getFullYear() + 1),
            format: "dd-mm-yyyy",
            endDate: new Date()
        });
        //FECHA VENCIMIENTO TARJETA

        $(".datepicker4").datepicker({
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayBtn: true,
            firstDay: 1,
            minDate: new Date(2005, 0, 1),
            yearRange: '2005:' + String((new Date()).getFullYear() + 1),
            format: "mm-yyyy",
            startDate: new Date()

        });

        //FECHA ENTREGA PRODUCTO

        $(".datepicker5").datepicker({
            changeMonth: true,
            changeYear: true,
            autoclose: true,
            todayBtn: true,
            firstDay: 1,
            minDate: new Date(2005, 0, 1),
            yearRange: '2005:' + String((new Date()).getFullYear() + 1),
            format: "dd-mm-yyyy",
            startDate: new Date()

        });

        $("#botonpagos").hide();
        $("#debitobancario").hide();
        $("#deposito").hide();
        $("#tarjeta").hide();
        cambiaFormaPago();
        $("#FormaPago").change(function() {

            cambiaFormaPago();

        });
    });


    function cambiaFormaPago() {
        let seleccionar = $("#FormaPago option:selected").val();

        $("#botonpagos").hide();
        $("#debitobancario").hide();
        $("#deposito").hide();
        $("#tarjeta").hide();
        switch (seleccionar) {
            case "1":
                $("#botonpagos").show();
                break;
            case "2":
                $("#debitobancario").show();
                break;
            case "3":
                $("#deposito").show();
                break;
            case "4":
                $("#tarjeta").show();
                break;
        }

    }


    function calcularEdadEdit() {

        fecha = $(this).val();
        var birthday_arr = fecha.split("-");
        var fecha = new Date(birthday_arr[2], birthday_arr[1] - 1, birthday_arr[0]);

        var today = new Date();
        //Restamos los años
        anos = today.getFullYear() - fecha.getFullYear();
        // Si no ha llegado su cumpleaños le restamos el año por cumplir
        if (fecha.getMonth() > (today.getMonth()) || fecha.getDay() > today.getDay())
            anos--;

        $('#Edad').val(anos);
    }

    //INICIO INGRESO DATOS
    $('#NumeroTarjeta').on('input', function() {
        this.value = this.value.replace(/[^0-9]/g, '');

    });

    $('#NumeroCuenta').on('input', function() {
        this.value = this.value.replace(/[^0-9]/g, '');

    });

    $('#Cantidad').on('input', function() {
        this.value = this.value.replace(/[^-?(?:\d+|\d{1,3}(?:.\d{3})+)?(?:\,\d+)?]/g, '').replace('.', ',');


    });




    $('#RUC').on('input', function() {
        this.value = this.value.replace(/[^0-9]/g, '');

    });

    $('#TelefonoCelular').on('input', function() {
        this.value = this.value.replace(/[^0-9]/g, '');

    });

    $('#TelefonoConvencional').on('input', function() {
        this.value = this.value.replace(/[^0-9]/g, '');




    });

    $("#Nombre1").keypress(function(key) {
        window.console.log(key.charCode)
        if ((key.charCode < 97 || key.charCode > 122)//letras mayusculas
            && (key.charCode < 65 || key.charCode > 90) //letras minusculas
            && (key.charCode != 45) //retroceso
            && (key.charCode != 241) //ñ
            && (key.charCode != 209) //Ñ
            //&& (key.charCode != 32) //espacio
            && (key.charCode != 225) //á
            && (key.charCode != 233) //é
            && (key.charCode != 237) //í
            && (key.charCode != 243) //ó
            && (key.charCode != 250) //ú
            && (key.charCode != 193) //Á
            && (key.charCode != 201) //É
            && (key.charCode != 205) //Í
            && (key.charCode != 211) //Ó
            && (key.charCode != 218) //Ú

        )
            return false;
    });
    $("#Nombre2").keypress(function(key) {
        window.console.log(key.charCode)
        if ((key.charCode < 97 || key.charCode > 122)//letras mayusculas
            && (key.charCode < 65 || key.charCode > 90) //letras minusculas
            && (key.charCode != 45) //retroceso
            && (key.charCode != 241) //ñ
            && (key.charCode != 209) //Ñ
            //&& (key.charCode != 32) //espacio
            && (key.charCode != 225) //á
            && (key.charCode != 233) //é
            && (key.charCode != 237) //í
            && (key.charCode != 243) //ó
            && (key.charCode != 250) //ú
            && (key.charCode != 193) //Á
            && (key.charCode != 201) //É
            && (key.charCode != 205) //Í
            && (key.charCode != 211) //Ó
            && (key.charCode != 218) //Ú

        )
            return false;
    });
    $("#Apellido1").keypress(function(key) {
        window.console.log(key.charCode)
        if ((key.charCode < 97 || key.charCode > 122)//letras mayusculas
            && (key.charCode < 65 || key.charCode > 90) //letras minusculas
            && (key.charCode != 45) //retroceso
            && (key.charCode != 241) //ñ
            && (key.charCode != 209) //Ñ
           // && (key.charCode != 32) //espacio
            && (key.charCode != 225) //á
            && (key.charCode != 233) //é
            && (key.charCode != 237) //í
            && (key.charCode != 243) //ó
            && (key.charCode != 250) //ú
            && (key.charCode != 193) //Á
            && (key.charCode != 201) //É
            && (key.charCode != 205) //Í
            && (key.charCode != 211) //Ó
            && (key.charCode != 218) //Ú

        )
            return false;
    });
    $("#Apellido2").keypress(function(key) {
        window.console.log(key.charCode)
        if ((key.charCode < 97 || key.charCode > 122)//letras mayusculas
            && (key.charCode < 65 || key.charCode > 90) //letras minusculas
            && (key.charCode != 45) //retroceso
            && (key.charCode != 241) //ñ
            && (key.charCode != 209) //Ñ
            //&& (key.charCode != 32) //espacio
            && (key.charCode != 225) //á
            && (key.charCode != 233) //é
            && (key.charCode != 237) //í
            && (key.charCode != 243) //ó
            && (key.charCode != 250) //ú
            && (key.charCode != 193) //Á
            && (key.charCode != 201) //É
            && (key.charCode != 205) //Í
            && (key.charCode != 211) //Ó
            && (key.charCode != 218) //Ú

        )
            return false;
    });
    //poner decimales
        //    $("#Cantidad").on({
        //    "focus": function (event) {
        //        $(event.target).select();
        //    },
        //    "keyup": function (event) {
        //        $(event.target).val(function (index, value ) {
        //            return value.replace(/\D/g, "")
        //                        .replace(/([0-9])([0-9]{2})$/, '$1,$2')
        //                        .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ",");
        //        });
        //    }
        //});
     $("#Cantidad").change(function() {

         if ($("#Cantidad").val() == '0,00' || $("#Cantidad").val() == '0' || $("#Cantidad").val() == '0,0' || $("#Cantidad").val() == '0,000') {
            $("#Cantidad").focus();
            Swal.fire("¡Advertencia!", "Ingrese una cantidad mayor a 0", "warning");
            $('#Cantidad').prop('checked', false);
            $("#Cantidad").val("");

            return false;

        }


    });

        //$("#Cantidad").change(function() {

        //    var valor = parseInt($("#Cantidad").val());

        //    if ( valor <= 0 ) {
        //            $("#Cantidad").focus();
        //            Swal.fire("¡Advertencia!", "Ingrese una cantidad mayor a 0", "warning");
        //            $('#Cantidad').prop('checked', false);
        //             $("#Cantidad").val("");

        //            return false;

        //        }


        //    });

    $("#WhatsApp").change(function() {

        var valor = $("#TelefonoCelular").val();

        if (valor.length != 10) {
            $("#TelefonoCelular").focus();
            Swal.fire("¡Advertencia!", "Ingrese un numero de celular valido", "warning");
            $('#WhatsApp').prop('checked', false);

            return false;

        }


    });
    //JHOSEL MACIAS 08.07.22
    $("#RUC").change(function() {

        var valor = $("#RUC").val();
        var tipo = $("#Cedula").val();

        if (tipo==1)
        {
            if (valor.length < 13) {
                $("#RUC").focus();
                Swal.fire("¡Advertencia!", "Ingrese un numero de Documento valido", "warning");
                $('#RUC').prop('checked', false);
                $("#RUC").val("");

                return false;

            }
        }
        else
        {
            if (valor.length != 10) {
                $("#RUC").focus();
                Swal.fire("¡Advertencia!", "Ingrese un numero de Documento valido", "warning");
                $('#RUC').prop('checked', false);
                $("#RUC").val("");

                return false;

            }
        }
        

    });
    $("#TelefonoCelular").change(function() {

        var valor = $("#TelefonoCelular").val();

        if (valor.length != 10) {
            $("#TelefonoCelular").focus();
            Swal.fire("¡Advertencia!", "Ingrese un numero de celular valido", "warning");
            $('#WhatsApp').prop('checked', false);
            $("#TelefonoCelular").val("");

            return false;

        }

    });



    $("#FrecuenciaDonacion").change(function() {

        var valor = $("#FrecuenciaDonacion").val();
        var categoria = $("#Categoria").val();


        if (valor == 5 & categoria == 1) {
            Swal.fire("¡Advertencia!", "Categoría Recurrente no puede ser Frecuencia de Donación: Único", "warning");
            $("#FrecuenciaDonacion").val(-1);
            $("#Categoria").val(-1);
            return false;

        }

    });
    //FIN INGRESO DATOS

    //INICIO CATEGORIAS
    $("#Categoria").change(function() {

        var valor = $("#FrecuenciaDonacion").val();
        var categoria = $("#Categoria").val();

        $("#FrecuenciaDonacion").prop('disabled', false);

        //if ( categoria ==  2) {
        //    $("#FrecuenciaDonacion").val(5);
        //    $("#FrecuenciaDonacion").attr('readonly', true);
        if ($("#Categoria").val() == "2") {
            $("#FrecuenciaDonacion").val(5);
            $('#FrecuenciaDonacion').prop('disabled', true);

            return false;
        }


        if (valor == 5 & categoria == 1) {
            Swal.fire("¡Advertencia!", "Categoría Recurrente no puede ser Frecuencia de Donación: Único", "warning");
            $("#FrecuenciaDonacion").val(-1);
            $("#Categoria").val(-1);
            return false;

        }

    });






    // FIN CATEGORIAS

    //INICIO DIVISION POLITICAS

    $("#Region").change(function() {

        $.get("/Maestro/Pais/GetProvincia", { idRegion: $("#Region").val() }, function(data) {
            // VACIAMOS EL DropDownList
            $("#Provincia").empty();

            // $("#descCompetencia").val(data[0].nombreCompetencia);
            // AÑADIMOS UN NUEVO label CON EL NOMBRE DEL ELEMENTO SELECCIONADO
            $("#Provincia").append("<option value>Seleccione</option>")
            // CONSTRUIMOS EL DropDownList A PARTIR DEL RESULTADO Json (data)
            $.each(data, function(index, row) {
                $("#Provincia").append("<option value='" + row.id + "'>" + row.nombre + "</option>")
            });
        });
    });

    $("#Provincia").change(function() {

        $.get("/Maestro/Pais/GetCiudad", { idProvincia: $("#Provincia").val() }, function(data) {
            // VACIAMOS EL DropDownList
            $("#Ciudad").empty();

            // $("#descCompetencia").val(data[0].nombreCompetencia);
            // AÑADIMOS UN NUEVO label CON EL NOMBRE DEL ELEMENTO SELECCIONADO
            $("#Ciudad").append("<option value>Seleccione</option>")
            // CONSTRUIMOS EL DropDownList A PARTIR DEL RESULTADO Json (data)
            $.each(data, function(index, row) {
                $("#Ciudad").append("<option value='" + row.id + "'>" + row.nombre + "</option>")
            });
        });
    });

    $("#Ciudad").change(function() {
        $.get("/Maestro/Pais/GetCiudad", { idProvincia: $("#Provincia option:selected").val() }, function(data) {

            $("#CodigoArea").empty();

            $.each(data, function(index, row) {
                $("#CodigoArea").val(row.codigoArea);
            });
        });



    });

    //FIN DIVISION POLITICAS
    $("#Cedula").change(function() {
        var tipo = $("#Cedula").val();

        if (tipo == 2) {
            $("#RUC").attr('maxlength', '10');
        }
        else {
            $("#RUC").attr('maxlength', '13');
        }


    });
                        //


</script>
